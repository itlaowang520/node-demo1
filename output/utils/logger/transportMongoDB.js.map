{"version":3,"sources":["../../../src/utils/logger/transportMongoDB.js"],"names":["collectionName","TransportMongoDB","options","host","dbName","port","database","Database","initDatabase","info","callback","db","getDB","collection","insertOne","level","Symbol","for","message","timestamp","then","Function","catch","error","console","Transport"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,cAAc,GAAG,MAAvB;;IAEqBC,gB;;;AACjB,8BAA0B;AAAA;;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA;AACtB;AACA,UAAKC,IAAL,GAAYD,OAAO,CAACC,IAApB;AACA,UAAKC,MAAL,GAAcF,OAAO,CAACE,MAAtB;AACA,UAAKC,IAAL,GAAYH,OAAO,CAACG,IAApB;AACA,UAAKC,QAAL,GAAgB,IAAIC,iBAAJ,CAAa;AACzBH,MAAAA,MAAM,EAAE,MAAKA,MADY;AAEzBD,MAAAA,IAAI,EAAE,MAAKA,IAFc;AAGzBE,MAAAA,IAAI,EAAE,MAAKA;AAHc,KAAb,CAAhB;;AAKA,UAAKC,QAAL,CAAcE,YAAd;;AAVsB;AAWzB;;;;wBAOGC,I,EAAMC,Q,EAAU;AAChB,UAAMC,EAAE,GAAG,KAAKL,QAAL,CAAcM,KAAd,EAAX;;AACA,UAAI,CAACD,EAAL,EAAS;AACL;AACH;;AACDA,MAAAA,EAAE,CAACE,UAAH,CAAcb,cAAd,EAA8Bc,SAA9B,CAAwC;AACpCC,QAAAA,KAAK,EAAEN,IAAI,CAACO,MAAM,CAACC,GAAP,CAAW,OAAX,CAAD,CADyB;AAEpCC,QAAAA,OAAO,EAAET,IAAI,CAACS,OAFsB;AAGpCC,QAAAA,SAAS,EAAEV,IAAI,CAACU;AAHoB,OAAxC,EAKKC,IALL,CAKU,YAAM;AACR,YAAIV,QAAQ,YAAYW,QAAxB,EAAkC;AAC9BX,UAAAA,QAAQ;AACX;AACJ,OATL,EAUKY,KAVL,CAUW,UAACC,KAAD,EAAW;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,OAZL;AAaH;;;EArCyCE,kB","sourcesContent":["import {Transport} from 'winston';\nimport Database from '../../models/database';\n\nconst collectionName = 'logs';\n\nexport default class TransportMongoDB extends Transport {\n    constructor(options = {}) {\n        super();\n        this.host = options.host;\n        this.dbName = options.dbName;\n        this.port = options.port;\n        this.database = new Database({\n            dbName: this.dbName,\n            host: this.host,\n            port: this.port\n        });\n        this.database.initDatabase();\n    }\n\n    /**\n     * 每一次日志输出时调用的函数\n     * @param   {Object}    info        日志信息\n     * @param   {Function}  callback    回调函数\n     */\n    log(info, callback) {\n        const db = this.database.getDB();\n        if (!db) {\n            return;\n        }\n        db.collection(collectionName).insertOne({\n            level: info[Symbol.for('level')],\n            message: info.message,\n            timestamp: info.timestamp\n        })\n            .then(() => {\n                if (callback instanceof Function) {\n                    callback();\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }\n}\n"],"file":"transportMongoDB.js"}