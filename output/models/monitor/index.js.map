{"version":3,"sources":["../../../src/models/monitor/index.js"],"names":["collectionName","getList","find","sort","toArray","addItem","data","newData","creatTime","Date","getTime","updateTime","insertOne","deleteItem","param","findOneAndDelete","deleteItemById","id","_id","getItemById","findOne","updateItem","findOneAndUpdate","$set","updateItemById","MonitorConfigModel"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,cAAc,GAAG,UAAvB;;AAMA,IAAMC,OAAO;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,6CACL,0BAAcD,cAAd,EACFE,IADE,GAEFC,IAFE,CAEG;AAAE,4BAAc,CAAC;AAAjB,aAFH,EAGFC,OAHE,EADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPH,OAAO;AAAA;AAAA;AAAA,GAAb;;AAYA,IAAMI,OAAO;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAMC,YAAAA,IAAN,8DAAa,EAAb;AACRC,YAAAA,OADQ,mCAELD,IAFK;AAIZC,YAAAA,OAAO,CAACC,SAAR,GAAoB,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACAH,YAAAA,OAAO,CAACI,UAAR,GAAqB,IAAIF,IAAJ,GAAWC,OAAX,EAArB;AALY,8CAML,0BAAcV,cAAd,EACFY,SADE,CACQL,OADR,CANK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPF,OAAO;AAAA;AAAA;AAAA,GAAb;;AAeA,IAAMQ,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAMC,YAAAA,KAAN,8DAAc,EAAd;AAAA,8CACR,0BAAcd,cAAd,EACFe,gBADE,CACeD,KADf,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVD,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAKA,IAAMG,cAAc;AAAA,wEAAG,kBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CACZJ,UAAU,CAAC;AACdK,cAAAA,GAAG,EAAE,uBAASD,EAAT;AADS,aAAD,CADE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdD,cAAc;AAAA;AAAA;AAAA,GAApB;;AAWA,IAAMG,WAAW;AAAA,wEAAG,kBAAMF,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8CACT,0BAAcjB,cAAd,EACFoB,OADE,CACM;AACLF,cAAAA,GAAG,EAAE,uBAASD,EAAT;AADA,aADN,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXE,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAaA,IAAME,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAMP,YAAAA,KAAN,8DAAc,EAAd;AAAkBP,YAAAA,OAAlB,8DAA4B,EAA5B;AACfA,YAAAA,OAAO,CAACI,UAAR,GAAqB,IAAIF,IAAJ,GAAWC,OAAX,EAArB;AADe,8CAER,0BAAcV,cAAd,EACFsB,gBADE,CAECR,KAFD,EAGC;AACIS,cAAAA,IAAI,EAAEhB;AADV,aAHD,CAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVc,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAWA,IAAMG,cAAc;AAAA,wEAAG,kBAAMP,EAAN,EAAUV,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA,8CACZc,UAAU,CAAC;AACdH,cAAAA,GAAG,EAAE,uBAASD,EAAT;AADS,aAAD,EAEdV,OAFc,CADE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdiB,cAAc;AAAA;AAAA;AAAA,GAApB;;AAMA,IAAMC,kBAAkB,GAAG;AACvBxB,EAAAA,OAAO,EAAPA,OADuB;AAEvBI,EAAAA,OAAO,EAAPA,OAFuB;AAGvBW,EAAAA,cAAc,EAAdA,cAHuB;AAIvBQ,EAAAA,cAAc,EAAdA,cAJuB;AAKvBL,EAAAA,WAAW,EAAXA;AALuB,CAA3B;eAQeM,kB","sourcesContent":["import { getCollection } from '../index';\nimport { ObjectId } from 'mongodb';\n\nconst collectionName = 'hospital';\n\n/**\n * 获取monitorConfig列表\n * @return {Promise<monitorConfig[]>}\n */\nconst getList = async() => {\n    return getCollection(collectionName)\n        .find()\n        .sort({ 'updateTime': -1 })\n        .toArray();\n};\n\n/**\n * 添加单个Monitor\n * @param {Monitor} data 新Monitor数据\n * @return {Promise<*>}\n */\nconst addItem = async(data = {}) => {\n    let newData = {\n        ...data\n    };\n    newData.creatTime = new Date().getTime();\n    newData.updateTime = new Date().getTime();\n    return getCollection(collectionName)\n        .insertOne(newData);\n};\n\n/**\n * 删除对应的monitor\n * @param param\n * @return {Promise<*>}\n */\nconst deleteItem = async(param = {}) => {\n    return getCollection(collectionName)\n        .findOneAndDelete(param);\n};\n\nconst deleteItemById = async(id) => {\n    return deleteItem({\n        _id: ObjectId(id)\n    });\n};\n\n/**\n * 根据id查询活动\n * @param {object} param 查询条件\n * @return {Promise<url>}\n */\nconst getItemById = async(id) => {\n    return getCollection(collectionName)\n        .findOne({\n            _id: ObjectId(id)\n        });\n};\n\n/**\n * 更新对应monitor\n * @param {object} param 查询条件\n * @param {monitor} newData 更新数据\n * @return {Promise<*>}\n */\nconst updateItem = async(param = {}, newData = {}) => {\n    newData.updateTime = new Date().getTime();\n    return getCollection(collectionName)\n        .findOneAndUpdate(\n            param,\n            {\n                $set: newData\n            }\n        );\n};\n\nconst updateItemById = async(id, newData) => {\n    return updateItem({\n        _id: ObjectId(id)\n    }, newData);\n};\n\nconst MonitorConfigModel = {\n    getList,\n    addItem,\n    deleteItemById,\n    updateItemById,\n    getItemById\n};\n\nexport default MonitorConfigModel;\n"],"file":"index.js"}